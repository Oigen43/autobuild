version: '3.8'

services:
  postgres:
    image: postgres:14.2
    container_name: ship-postgres
    networks:
      - ship
    volumes:
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pwd
    ports:
      - "5432:5432"
  redis:
    container_name: ship-redis
    image: redis:5.0.5
    command: redis-server --appendonly yes
    hostname: redis
    networks:
      - ship
    ports:
      - 6379:6379
  api:
    container_name: ship-api
    build:
      context: .
      dockerfile: app/Api.Sql/Dockerfile
    networks:
      - ship
    volumes:
      - ./api/src:/app/src
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:3001
  scheduler:
    container_name: ship-scheduler
    build:
      context: .
      dockerfile: app/Scheduler/Dockerfile
    networks:
      - ship
    volumes:
      - ./api/src:/app/src
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DOTNET_ENVIRONMENT=DevelopmentSql

networks:
  ship:
    name: ship-network